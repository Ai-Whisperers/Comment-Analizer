#!/usr/bin/env python3
"""
Crear archivo Excel v√°lido para testing del pipeline
"""

import pandas as pd
from pathlib import Path

def create_test_excel():
    """Create a proper Excel file for testing"""
    
    # Sample comments data (realistic Paraguay telecom feedback)
    comentarios_data = [
        "Excelente servicio de internet, muy r√°pido y estable",
        "El soporte t√©cnico es muy bueno, resuelven r√°pido los problemas", 
        "Internet lento en horas pico, necesitan mejorar la infraestructura",
        "Buena cobertura en el √°rea metropolitana de Asunci√≥n",
        "Precios competitivos comparado con otras empresas",
        "Problemas frecuentes de conectividad los fines de semana",
        "Atenci√≥n al cliente profesional y cordial",
        "Velocidad de subida muy lenta para videoconferencias",
        "Servicio confiable para trabajo remoto",
        "Falta cobertura en el interior del pa√≠s",
        "Buena relaci√≥n precio-calidad del servicio",
        "Instalaci√≥n r√°pida y t√©cnicos capacitados",
        "Cortes de servicio sin previo aviso",
        "App m√≥vil f√°cil de usar para gestionar cuenta",
        "Promociones atractivas para nuevos clientes",
        "Servicio 24/7 muy √∫til para emergencias",
        "Velocidad prometida no siempre se cumple",
        "Personal t√©cnico bien preparado y amable",
        "Internet estable durante tormentas",
        "Facturaci√≥n clara y transparente"
    ]
    
    # Create DataFrame with proper structure
    df = pd.DataFrame({
        'ID': range(1, len(comentarios_data) + 1),
        'Comentario Final': comentarios_data,
        'NPS': [9, 8, 4, 7, 8, 3, 9, 5, 8, 4, 7, 8, 2, 7, 8, 9, 5, 8, 7, 8],
        'Nota': [4.5, 4.0, 2.0, 3.5, 4.0, 1.5, 4.5, 2.5, 4.0, 2.0, 3.5, 4.0, 1.0, 3.5, 4.0, 4.5, 2.5, 4.0, 3.5, 4.0],
        'Fecha': ['2024-01-01', '2024-01-02', '2024-01-03', '2024-01-04', '2024-01-05'] * 4
    })
    
    # Save to local-reports directory
    local_reports_dir = Path(__file__).parent / "local-reports"
    local_reports_dir.mkdir(exist_ok=True)
    
    output_file = local_reports_dir / "test_comments_valid.xlsx"
    
    # Create Excel with multiple sheets to test robustness
    with pd.ExcelWriter(output_file, engine='openpyxl') as writer:
        # Main sheet with comments
        df.to_excel(writer, sheet_name='Comentarios', index=False)
        
        # Summary sheet
        summary_df = pd.DataFrame({
            'M√©trica': ['Total Comentarios', 'NPS Promedio', 'Nota Promedio'],
            'Valor': [len(comentarios_data), df['NPS'].mean(), df['Nota'].mean()]
        })
        summary_df.to_excel(writer, sheet_name='Resumen', index=False)
    
    print(f"‚úÖ Excel creado: {output_file}")
    print(f"üìä Contenido:")
    print(f"  ‚Ä¢ {len(comentarios_data)} comentarios")
    print(f"  ‚Ä¢ NPS promedio: {df['NPS'].mean():.1f}")
    print(f"  ‚Ä¢ Nota promedio: {df['Nota'].mean():.1f}")
    print(f"  ‚Ä¢ Columnas: {list(df.columns)}")
    
    return output_file

def create_minimal_test_excel():
    """Create minimal Excel for quick testing"""
    
    minimal_data = [
        "Buen servicio de internet",
        "Atenci√≥n al cliente excelente", 
        "Velocidad podr√≠a mejorar",
        "Precio justo para el servicio",
        "Instalaci√≥n fue r√°pida"
    ]
    
    df = pd.DataFrame({
        'Comentario Final': minimal_data,
        'NPS': [8, 9, 5, 7, 8]
    })
    
    local_reports_dir = Path(__file__).parent / "local-reports"
    output_file = local_reports_dir / "test_minimal.xlsx"
    
    df.to_excel(output_file, index=False, engine='openpyxl')
    
    print(f"‚úÖ Excel m√≠nimo creado: {output_file}")
    print(f"üìä {len(minimal_data)} comentarios para test r√°pido")
    
    return output_file

if __name__ == "__main__":
    print("üöÄ Creando archivos Excel para testing...")
    
    # Create both versions
    full_file = create_test_excel()
    minimal_file = create_minimal_test_excel()
    
    print(f"\nüìÅ Archivos creados:")
    print(f"  ‚Ä¢ Completo: {full_file}")
    print(f"  ‚Ä¢ M√≠nimo: {minimal_file}")
    print(f"\n‚úÖ Listos para testing del pipeline")